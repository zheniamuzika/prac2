from scipy.optimize import fsolve

def equation(x):
    return 2*x**4 - 8*x**3 - 16*x**2 - 1

solutions = fsolve(equation, [-2, -1, 0, 1, 2], xtol=1e-3)

print("Знайдені розв'язки:")
for solution in solutions:
    print(solution)
def bisection_method(f, a, b, tol):
    if f(a) * f(b) >= 0:
        return None 

    while (b - a) / 2 > tol:
        c = (a + b) / 2  
        if f(c) == 0:
            return c  
        elif f(a) * f(c) < 0:
            b = c  
        else:
            a = c 

    return (a + b) / 2  

def equation(x):
    return 2*x**4 - 8*x**3 - 16*x**2 - 1

a = -3.0  
b = 3.0  
tol = 0.0001  

root = bisection_method(equation, a, b, tol)
print("Метод половинного ділення: {}".format(root))
